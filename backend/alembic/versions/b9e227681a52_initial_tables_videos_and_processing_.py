"""Initial tables - videos and processing_results

Revision ID: b9e227681a52
Revises: 
Create Date: 2025-10-20 00:13:48.279464

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b9e227681a52'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('processing_results',
    sa.Column('video_id', sa.UUID(), nullable=False, comment='Reference to videos.id (not YouTube video_id)'),
    sa.Column('transcript_text', sa.Text(), nullable=False, comment='Full transcript extracted from video'),
    sa.Column('transcript_length', sa.Integer(), nullable=False, comment='Character count of transcript'),
    sa.Column('lecture_notes', sa.Text(), nullable=False, comment='Markdown-formatted lecture notes generated by Gemini'),
    sa.Column('ai_tools', sa.JSON(), nullable=False, comment='JSON array of AI tools extracted by GPT-4o-mini'),
    sa.Column('ai_tools_count', sa.Integer(), nullable=False, comment='Number of AI tools extracted'),
    sa.Column('processing_time_seconds', sa.Float(), nullable=False, comment='Total processing time in seconds'),
    sa.Column('agent_execution_order', sa.JSON(), nullable=False, comment='Ordered list of agent execution (for debugging)'),
    sa.Column('langgraph_thread_id', sa.String(length=100), nullable=True, comment='LangGraph thread ID for state persistence'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier (UUID v4)'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when record was last updated'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_processing_results_langgraph_thread_id'), 'processing_results', ['langgraph_thread_id'], unique=False)
    op.create_index(op.f('ix_processing_results_video_id'), 'processing_results', ['video_id'], unique=False)
    op.create_table('videos',
    sa.Column('video_id', sa.String(length=20), nullable=False, comment="YouTube video ID (e.g., 'jNQXAC9IVRw')"),
    sa.Column('video_url', sa.String(length=500), nullable=False, comment='Full YouTube video URL'),
    sa.Column('title', sa.String(length=500), nullable=False, comment='Video title from YouTube'),
    sa.Column('channel_name', sa.String(length=200), nullable=True, comment='YouTube channel name'),
    sa.Column('duration', sa.Integer(), nullable=True, comment='Video duration in seconds'),
    sa.Column('times_processed', sa.Integer(), server_default='0', nullable=False, comment='Number of times this video has been processed'),
    sa.Column('last_processed_at', sa.DateTime(timezone=True), nullable=True, comment='Timestamp of most recent processing'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier (UUID v4)'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when record was last updated'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_videos_video_id'), 'videos', ['video_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_videos_video_id'), table_name='videos')
    op.drop_table('videos')
    op.drop_index(op.f('ix_processing_results_video_id'), table_name='processing_results')
    op.drop_index(op.f('ix_processing_results_langgraph_thread_id'), table_name='processing_results')
    op.drop_table('processing_results')
    # ### end Alembic commands ###
